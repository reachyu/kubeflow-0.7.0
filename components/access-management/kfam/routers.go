/*
 * Kubeflow Auth
 *
 * Access Management API.
 *
 * API version: 1.0.0
 * Contact: kubeflow-engineering@google.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package kfam

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter(kfamV1Alpha1 KfamV1Alpha1Interface) *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	routes := Routes{
		Route{
			"Index",
			"GET",
			"/kfam/",
			Index,
		},

		Route{
			"CreateBinding",
			strings.ToUpper("Post"),
			"/kfam/v1/bindings",
			kfamV1Alpha1.CreateBinding,
		},

		Route{
			"CreateProfile",
			strings.ToUpper("Post"),
			"/kfam/v1/profiles",
			kfamV1Alpha1.CreateProfile,
		},

		Route{
			"DeleteBinding",
			strings.ToUpper("Delete"),
			"/kfam/v1/bindings",
			kfamV1Alpha1.DeleteBinding,
		},

		Route{
			"DeleteProfile",
			strings.ToUpper("Delete"),
			"/kfam/v1/profiles/{profile}",
			kfamV1Alpha1.DeleteProfile,
		},

		Route{
			"ReadBinding",
			strings.ToUpper("Get"),
			"/kfam/v1/bindings",
			kfamV1Alpha1.ReadBinding,
		},
		Route{
			"QueryClusterAdmin",
			strings.ToUpper("Get"),
			"/kfam/v1/role/clusteradmin",
			kfamV1Alpha1.QueryClusterAdmin,
		},
	}
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}
