---
swagger: "2.0"
info:
  description: "Access Management API."
  version: "0.1.0"
  title: "Kubeflow Auth"
  termsOfService: "https://www.kubeflow.org/"
  contact:
    email: "kubeflow-engineering@google.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/kfam"
schemes:
- "http"
paths:
  /v1/profiles:
    post:
      summary: "Create a instance, which own a namespace of same name"
      operationId: "create profile"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Profile spec"
        required: true
        schema:
          $ref: "#/definitions/Profile"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorMessage"
        500:
          description: "Internal Server Error"
  /v1/profiles/{profile}:
    delete:
      summary: "Delete profile"
      description: "Only admin or profile owner can delete profile"
      operationId: "delete profile"
      parameters:
      - name: "profile"
        in: "path"
        description: "Profile name"
        required: true
        type: "string"
        x-exportParamName: "Profile"
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Entry not found"
        500:
          description: "Internal Server Error"
  /v1/bindings:
    get:
      summary: "Get bindings created via kubeflow; filtered by query param"
      description: "Bindings will contain its current status"
      operationId: "read bindings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user"
        in: "query"
        description: "User name, when not empty, only return bindings of this user"
        required: false
        type: "string"
        x-exportParamName: "User"
        x-optionalDataType: "String"
      - name: "namespace"
        in: "query"
        description: "Namespace name, when not empty, only return bindings of this\
          \ namespace"
        required: false
        type: "string"
        x-exportParamName: "Namespace"
        x-optionalDataType: "String"
      - name: "role"
        in: "query"
        description: "Owner or editor or viewer, when not empty, only return bindings\
          \ of this role"
        required: false
        type: "string"
        x-exportParamName: "Role"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/BindingEntries"
        404:
          description: "Entry not found"
        500:
          description: "Internal Server Error"
    post:
      summary: "Create a binding specifying a user and an namespace, the binding will\
        \ grant user edit-access to referred namespace"
      description: "Only admin or referred namespace owner can create binding"
      operationId: "create binding"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Binding spec"
        required: true
        schema:
          $ref: "#/definitions/Binding"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorMessage"
        500:
          description: "Internal Server Error"
    delete:
      summary: "Delete binding specified in request body"
      description: "Only admin or referred namespace owner can delete binding"
      operationId: "delete binding"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Binding spec"
        required: true
        schema:
          $ref: "#/definitions/Binding"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Entry not found"
        500:
          description: "Internal Server Error"
  /v1/role/clusteradmin:
    get:
      summary: "Query whether the user specified by query param is cluster admin"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "user"
          in: "query"
          description: "username / email"
          required: true
          type: "string"
          x-exportParamName: "User"
          x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "boolean"
        500:
          description: "Internal Server Error"
definitions:
  BindingEntries:
    type: "object"
    properties:
      bindings:
        type: "array"
        items:
          $ref: "#/definitions/Binding"
  Subject:
    type: "object"
    properties:
      kind:
        type: "string"
      name:
        type: "string"
      namespace:
        type: "string"
    description: "in consistent with io.k8s.api.rbac.v1.Subject"
    example:
      kind: "kind"
      name: "name"
      namespace: "namespace"
  RoleRef:
    type: "object"
    properties:
      apiGroup:
        type: "string"
      kind:
        type: "string"
      name:
        type: "string"
    description: "in consistent with io.k8s.api.rbac.v1.RoleRef"
    example:
      apiGroup: "apiGroup"
      kind: "kind"
      name: "name"
  Binding:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/Subject"
      referredNamespace:
        type: "string"
      RoleRef:
        $ref: "#/definitions/RoleRef"
      status:
        type: "string"
        description: "Status of the profile, one of Succeeded, Failed, Unknown."
    description: "Binding will give user edit access to referredNamespace"
    example:
      RoleRef:
        apiGroup: "apiGroup"
        kind: "kind"
        name: "name"
      referredNamespace: "referredNamespace"
      user:
        kind: "kind"
        name: "name"
        namespace: "namespace"
      status: "status"
  Metadata:
    type: "object"
    properties:
      name:
        type: "string"
      namespace:
        type: "string"
    example:
      name: "name"
      namespace: "namespace"
  Profile:
    type: "object"
    properties:
      metadata:
        $ref: "#/definitions/Metadata"
      spec:
        $ref: "#/definitions/Profile_spec"
    example:
      metadata:
        name: "name"
        namespace: "namespace"
      spec:
        owner:
          kind: "kind"
          name: "name"
          namespace: "namespace"
  ErrorMessage:
    type: "object"
    properties:
      errorMessage:
        type: "string"
  Profile_spec:
    properties:
      owner:
        description: "Only accept kind: user"
        $ref: "#/definitions/Subject"
    example:
      owner:
        kind: "kind"
        name: "name"
        namespace: "namespace"
